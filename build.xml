<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:sf="antlib:com.salesforce" name="entity-generator">

    <property file="build.properties"/>

    <import file="build/path.build.xml"/>
    <import file="build/database.build.xml"/>
    <import file="build/emma.build.xml"/>
    <import file="bin/app.build.xml"/>

    <import file="build/salesforce/sf.build.xml"/>
    <import file="build/salesforce/sf.purge.build.xml"/>

    <target name="deploy" depends="copy-war, tomcat-start"/>

    <target name="copy-war">
        <copy todir="${tomcat.home.dir}/webapps" file="${war.dir}/${ant.project.name}.war"/>
    </target>

    <target name="tomcat-start">
        <exec executable="java" dir="${tomcat.home.dir}">
            <arg line="-cp bin\bootstrap.jar;bin\tomcat-juli.jar"/>
            <arg value="org.apache.catalina.startup.Bootstrap"/>
        </exec>
    </target>

    <target name="main" depends="package, copy-to-prod"/>

    <target name="copy-to-prod">
        <copy todir="${production.dir}/${jar.dir}">
            <fileset dir="${jar.dir}"/>
        </copy>
        <copy todir="${production.dir}/${war.dir}">
            <fileset dir="${war.dir}"/>
        </copy>
        <copy todir="${production.dir}/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <copy todir="${production.dir}/lib">
            <fileset dir="${lib.dir}/runtime">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <copy todir="${production.dir}/${bin.dir}">
            <fileset dir="${bin.dir}"/>
        </copy>
    </target>

    <target name="package" depends="package-main">
        <war destfile="${war.dir}/${ant.project.name}.war" webxml="${resources.dir}/WEB-INF/web.xml">
            <webinf dir="${resources.dir}/WEB-INF"/>
            <metainf file="${build.dir}/context.xml"/>
        </war>
    </target>

    <target name="package-main" depends="test">
        <jar jarfile="${main.jar}" basedir=".">
            <fileset dir="${classes.to.copy}">
                <include name="**"/>
            </fileset>
            <fileset dir="${resources.dir}">
                <exclude name="WEB-INF/**"/>
            </fileset>
            <include name=""/>
        </jar>
    </target>

    <target name="test" depends="emma, compile">

        <antcall target="instr-classes"/>

        <junit printsummary="yes" haltonfailure="true">
            <classpath path="${emma.instr.dir}"/>
            <classpath path="${main.classes.dir}"/>
            <classpath path="${resources.dir}"/>
            <classpath refid="test.dependencies"/>
            <classpath refid="other.dependencies"/>

            <formatter type="plain" usefile="false"/>

            <batchtest fork="yes">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>

            <jvmarg value="-Demma.coverage.out.file=${coverage.dir}/coverage.emma"/>
            <jvmarg value="-Demma.coverage.out.merge=false"/>
        </junit>

        <antcall target="report"/>
    </target>

    <target name="compile" depends="init, resolve">
        <javac srcdir="${main.src.dir}" destdir="${main.classes.dir}" includeantruntime="false" debug="true">
            <classpath refid="compile.dependencies"/>
            <classpath refid="other.dependencies"/>
        </javac>

        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" includeantruntime="false" debug="true">
            <classpath refid="test.dependencies"/>
            <classpath refid="other.dependencies"/>
            <classpath location="${main.classes.dir}"/>
        </javac>
    </target>


    <target name="resolve">
        <ivy:retrieve pattern="lib/[conf]/[artifact]-[revision](-[classifier]).[ext]"/>
    </target>

    <target name="init">
        <mkdir dir="${target.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${main.classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${reports.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${target.dir}"/>
        <delete dir="${reports.dir}"/>
        <delete>
            <fileset dir=".">
                <include name="*.log"/>
            </fileset>
        </delete>
    </target>
</project>
