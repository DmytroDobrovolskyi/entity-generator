#set($fields = $entity.getFields())
#set($tableName = $entity.getTableName())
#set($state = $entity.getState())

    IF  EXISTS
    (
        SELECT *
        FROM sys.procedures
        WHERE name ='$procedureName'
    )
    DROP PROCEDURE $procedureName

    DECLARE @procedureQuery nvarchar(MAX);
    DECLARE @initialProcedureQueryLength int;

    SET @procedureQuery =
    (
        'CREATE PROCEDURE $procedureName
        AS '
    )

    SET @initialProcedureQueryLength = LEN(@procedureQuery)

    #if($state.getIsNew())
        SET @procedureQuery = @procedureQuery +
        (
            'CREATE TABLE $schema.$tableName
            (
                #foreach($field in $fields)
                    #if($foreach.index != $entity.getFields().size() - 1)
                        $field.getColumnName() $field.getType().concat(',')
                    #else
                        $field.getColumnName() $field.getType()
                    #end
                #end
            )'
        );
    #elseif($state.getOldName())
        SET @procedureQuery = @procedureQuery +
        (
             'EXEC sp_rename ''$schema.$state.getOldName()'', ''$tableName''; '
        );
    #elseif($state.getIsDeleted())
        SET @procedureQuery = @procedureQuery +
        (
            'DROP TABLE $schema.$tableName'
        );
    #end

    #if(!$state.getIsNew() && !$state.getIsDeleted())
        #foreach($field in $fields)
            #set($fieldState = $field.getState())

            #if($fieldState.getIsNew())
                SET @procedureQuery = @procedureQuery +
                (
                    'ALTER TABLE $schema.$tableName
                     ADD $field.getColumnName() $field.getType()'
                );
            #elseif($fieldState.getOldName())
                SET @procedureQuery = @procedureQuery +
                (
                    'EXEC sp_RENAME ''$schema.$tableName.$fieldState.getOldName()'' ,
                    ''$field.getColumnName()'', ''COLUMN'' '
                );
            #elseif($fieldState.getIsDeleted())
                SET @procedureQuery = @procedureQuery +
                (
                    'ALTER TABLE $schema.$tableName
                     DROP COLUMN $field.getColumnName()'
                );
            #end
        #end
    #end

    EXEC sp_executesql @procedureQuery

    IF LEN(@procedureQuery) > @initialProcedureQueryLength
        EXEC ('$procedureName')
